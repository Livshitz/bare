@import (reference) "../variables.less";
@import (reference) "../atoms/index.less";

// Base layout component - uses stack for vertical layout
.layout {
  .stack;
  @apply t-min-h-screen t-gap-0;
}

// Layout components
.layout-header {
  @apply ~"t-w-full t-h-[4.5rem] t-relative";
}

.layout--header-padding {
  @apply ~"t-pt-[4.5rem]";
}

.layout-header-fixed {
  @apply ~"t-fixed t-top-0 t-left-0 t-right-0"; z-index: 800;
}

.layout-main {
  .layout--full-height;
  @apply ~"t-flex-1 t-max-h-full";
}

.layout-footer {
  @apply t-w-full;
}

.layout-sidebar {
  @apply t-w-64 t-flex-shrink-0;
  .layout--full-height;
  position: sticky;
  top: 0;
  left: 0;
  height: 100dvh;
  z-index: 950;
  width: 280px;
  transform: translateX(0);
  opacity: 1;
  transition: transform @sidebar-delay, opacity @sidebar-delay;
  overflow-y: auto;
}

.layout-sidebar-collapsable { @apply t-fixed; }
.layout-has-fixed-header {
  .layout-sidebar-not-collapsable { @apply ~"t-mt-[4.5rem] t-top-[4.5rem]"; max-height: calc(100dvh - 4.5rem); z-index:700; }
}

.layout-sidebar--collapsed {
  transform: translateX(-100%);
  opacity: 0;
}

.layout-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 900;
}

.layout-nav {
  @apply t-w-full;
}

// Layout modifiers
.layout--centered {
  .center;
}

.layout--full-height {
  @apply t-overflow-auto t-max-h-screen;
}

.layout--fullscreen {
  @apply t-min-h-screen;
}

.layout--fixed-header {
  > header {
    .layout-header-fixed;
  }
  
  > main {
    @apply ~"t-flex-1"; // Adjust based on header height
    .layout--header-padding;
  }
}

.layout--fixed-header.layout--no-header {
  > header {
    @apply t-hidden;
  }

  > main {
    @apply ~"t-pt-0 !important";
  }
}

.layout--sidebar-left {
  .row;
}

.layout--sidebar-right {
  .row-reverse;
}

.narrow {
  @apply t-max-w-7xl t-w-full t-mx-auto;
}

// Responsive modifiers
@media (max-width: 599px) {
  .layout--stack {
    .stack;
    
    > .layout-sidebar {
      @apply t-w-full;
    }
  }
  
  .layout--hide-sidebar {
    > .layout-sidebar {
      @apply t-hidden;
    }
  }
}

// Added from Test.vue and PageWithSidebar.vue
@sidebar-delay: 0.3s ease;

.layout-sidebar.sidebar-collapsed {
  opacity: 0;
  transform: translateX(-100%);
}

// Styles for main content when sidebar is present
.layout-main {
  position: relative;
  z-index: 1;
}

// Example of how main content might be shifted if sidebar is always visible and not an overlay
// .layout-main--sidebar-visible {
//   margin-left: 280px; // Same as sidebar width
//   transition: margin-left @sidebar-delay;
// }

// .layout-main--sidebar-collapsed { // When sidebar is collapsed, main content takes full width
//   margin-left: 0;
// } 

:global(.rtl) #sidebar.sidebar-collapsed,
:global([dir="rtl"]) #sidebar.sidebar-collapsed {
  transform: translateX(100%);
}